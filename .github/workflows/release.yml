name: Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      env_name:
        description: 'Target environment tag (dev/stage)'
        required: false
        default: dev
        type: choice
        options:
          - dev
          - stage
      release_tag:
        description: 'Release tag for stage deployment (e.g., 0.0.1)'
        required: false
        type: string

permissions:
  contents: read
  packages: write

jobs:
  docker:
    name: Build & Push Docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{  github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compute env tag
        id: vars
        run: |
          ENV_NAME="${{ inputs.env_name }}"
          if [ -z "$ENV_NAME" ]; then ENV_NAME=dev; fi
          ENV_NAME_LOWER="$(printf '%s' "$ENV_NAME" | tr '[:upper:]' '[:lower:]')"

          if [ "$ENV_NAME" = "stage" ]; then
            if [ -n "${{ inputs.release_tag }}" ]; then
              # Валидация формата версии (простая проверка на x.y.z)
              if [[ "${{ inputs.release_tag }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
                echo "ENV_TAG=stage-${{ inputs.release_tag }}" >> $GITHUB_OUTPUT
              else
                echo "ERROR: Invalid release tag format. Expected format: x.y.z (e.g., 0.0.1)"
                exit 1
              fi
            else
              echo "ERROR: Release tag is required for stage deployment"
              exit 1
            fi
          else
            echo "ENV_TAG=${ENV_NAME_LOWER}-$(date -u +%Y%m%d%H%M%S)-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/webserver-app-back
          tags: |
            type=sha,format=short
            type=raw,value={{date 'YYYYMMDD-HHmmss' tz='UTC'}}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          provenance: false
          tags: |
            ${{ steps.meta.outputs.tags }}
            ghcr.io/${{ github.repository_owner }}/webserver-app-back:${{ steps.vars.outputs.ENV_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
